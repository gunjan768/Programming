#include<bits/stdc++.h>
using namespace std;
#include <ext/pb_ds/tree_policy.hpp>
#include <ext/pb_ds/assoc_container.hpp>
using namespace __gnu_pbds;
 
// greater<T> for sorting decreasingly 
template <typename T>  using ordered_set =
	tree<T, null_type, less<T>, rb_tree_tag, tree_order_statistics_node_update>;
 
#define ll           long long
#define rep(i,j,n)   for(ll i=j;i<n;i++)
#define scn(a)       scanf("%lld",&a)
#define scns(a,b)    scanf("%lld %lld",&a,&b)
#define print(a)     printf("%lld\n",a)
#define vec          vector<ll>
#define pb           push_back    
#define pairs        pair<ll,ll>
#define f            first
#define s            second
#define all(v)       v.begin(),v.end()
#define mem(a,b)     memset(a,b,sizeof(a))
#define inf          INT_MAX
const ll mod=1e9+7;
const ll N=1e7+5;
ll t,n;

ll prime[N];
vec v1;
 
void sieve()
{
    for(ll i=2;i*i<N;i++)
    {
        if(prime[i]==0)
        {
            for(ll j=i*i;j<N;j+=i)
            prime[j]=i;
        }
    }
}
 
void primeFactor(ll val)
{
    while(val>1)
    {
        ll factor=prime[val];

        if(!factor)
        factor=val;

        while(val%factor==0)
        val/=factor;

        v1.pb(factor);
    }
}

int main()
{
    sieve();

    primeFactor(n);
}    