https://www.hackerearth.com/practice/data-structures/stacks/basics-of-stacks/practice-problems/algorithm/nearest-smaller-element-929558b4/description/?layout=old


#include<bits/stdc++.h>
using namespace std;
#include <ext/pb_ds/tree_policy.hpp>
#include <ext/pb_ds/assoc_container.hpp>
using namespace __gnu_pbds;
template <typename T>  using ordered_set =
tree<T, null_type, less<T>, rb_tree_tag, tree_order_statistics_node_update>;
#define ll           long long
#define rep(i,j,n)   for(int i=j;i<n;i++)
#define scn(a)       scanf("%d",&a)
#define scns(a,b)    scanf("%d %d",&a,&b)
#define print(a)     printf("%d\n",a)
#define vec          vector<int>
#define pb           push_back    
#define pairs        pair<int,int>
#define f            first
#define s            second
#define all(v)       v.begin(),v.end()
#define mem(a,b)     memset(a,b,sizeof(a))
#define inf          INT_MAX
const int mod=1e9+7;
const int N=5e5+5;
int t;

int n;

int main()
{
    t=1;

    while(t--)
    {
        scn(n);

        int a[n];

        rep(i,0,n)
        scn(a[i]);

        stack<int>s1;
	    
        int ans[n];
        
        for(int i=0;i<n;i++)
        {
            while(!s1.empty() && a[s1.top()]>=a[i])
            s1.pop();
            
            if(!s1.empty())
            ans[i]=a[s1.top()];
            else
            ans[i]=-1;
            
            s1.push(i);
        }
        
        rep(i,0,n)
        cout<<ans[i]<<" \n"[i==n-1];
    }
}