#include<bits/stdc++.h>
using namespace std;
#include <ext/pb_ds/tree_policy.hpp>
#include <ext/pb_ds/assoc_container.hpp>
using namespace __gnu_pbds;
template <typename T>  using ordered_set =
tree<T, null_type, less<T>, rb_tree_tag, tree_order_statistics_node_update>;
#define ll           long long
#define rep(i,j,n)   for(int i=j;i<n;++i)
#define scn(a)       scanf("%d",&a)
#define scns(a,b)    scanf("%d %d",&a,&b)
#define print(a)     printf("%d\n",a)
#define pb           emplace_back    
#define f            first
#define s            second
#define all(v)       v.begin(),v.end()
#define inf          (int)2e9+7
const int mod = 1e9+7;
const int N = 5e5+5;

int n, *p;

// This proves that you have to delete the pointer variable using delete keyword. Lifetime of pointer
// variable is through out the program.
void f()
{
    int x = 10;

    int *q = &x; p = q;

    // Everytime you run a program, q gets allocated a new memory space.
    cout<<q<<" "<<*q<<endl;

    // If you perform a delete statement then you will face runtime error as q is assigned to the global
    // pointer p i.e. pointer p is pointing to the same adddress location to that of q.
    // delete q;
}

int main()
{
    int test; scn(test);

    for(int t = 1; t <= test; ++t)
    {
        f();

        cout<<"Main "<<*p<<endl;
    }

    return 0;
}