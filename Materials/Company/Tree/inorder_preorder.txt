Node* build(int st,int end,int *in,int *pre,unordered_map<int,int> &pos,int &ind)
{
    if(st>end)
    return nullptr;
    
    int data = pre[ind++];
    
    Node *node = new Node(data);
    
    if(st==end)
    return node;
    
    int mid=pos[data];
    
    node->left=build(st,mid-1,in,pre,pos,ind);
    node->right=build(mid+1,end,in,pre,pos,ind);
    
    return node;
}

Node* buildTree(int in[],int pre[], int n)
{
    unordered_map<int,int>pos;
    
    for(int i=0;i<n;i++)
    pos[in[i]]=i;
    
    int start=0;
    
    Node *root=build(0,n-1,in,pre,pos,start);
    
    return root;
}