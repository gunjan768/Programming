#include<bits/stdc++.h>
using namespace std;
#include <ext/pb_ds/tree_policy.hpp>
#include <ext/pb_ds/assoc_container.hpp>
using namespace __gnu_pbds;
template <typename T>  using ordered_set =
tree<T, null_type, less<T>, rb_tree_tag, tree_order_statistics_node_update>;
#define ll           long long
#define rep(i,j,n)   for(int i=j;i<n;i++)
#define scn(a)       scanf("%d",&a)
#define scns(a,b)    scanf("%d %d",&a,&b)
#define print(a)     printf("%d\n",a)
#define vec          vector<int>
#define pb           push_back    
#define pairs        pair<int,int>
#define f            first
#define s            second
#define all(v)       v.begin(),v.end()
#define mem(a,b)     memset(a,b,sizeof(a))
#define inf          INT_MAX
const int mod = 1e9+7;
const int N = 5e5+5;

int n, ind;

int min(int a,int b)
{
    if(a<b)
    return a;

    return b;
}

int manacher(string &s1)
{
    int n = (int)s1.size();

    int r = 0, c = 0, mx = 0, pal[n+1];
    
    memset(pal,0,sizeof pal);
  
    for(int i=0;i<n;++i)
    {
        int left = 2*c-i, right = r-i;
        
        if(i < r)
        pal[i] = min(pal[left], right);
        
        int st = i-(pal[i]+1), end = i+(pal[i]+1);
        
        while(st >= 0 && end<n && s1[st] == s1[end])
        --st, ++end, ++pal[i];
        
        if(i+pal[i] > r)
        {
            r = i+pal[i], c = i;
            
            if(pal[i]>mx)
            mx = pal[i], ind = i;
        }
    }

    return mx;
}

int main()
{
    int test; scn(test);

    while(test--)
    {
        string s1, s2, ans; cin>>s2;

        s1.pb('#'), n = s2.size();
        
        for(int i=0;i<n;i++)
        s1.pb(s2[i]), s1.pb('#');

        int maxLen = manacher(s1);
 
        for(int i=ind-maxLen; i<ind+maxLen; i++)
        if(s1[i]!='#')
        ans.pb(s1[i]);
        
        cout<<ans<<endl;
    }
}