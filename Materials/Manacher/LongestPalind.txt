#include<bits/stdc++.h>
using namespace std;
#include <ext/pb_ds/tree_policy.hpp>
#include <ext/pb_ds/assoc_container.hpp>
using namespace __gnu_pbds;
template <typename T>  using ordered_set =
tree<T, null_type, less<T>, rb_tree_tag, tree_order_statistics_node_update>;
#define ll           long long
#define rep(i,j,n)   for(int i=j;i<n;i++)
#define scn(a)       scanf("%d",&a)
#define scns(a,b)    scanf("%d %d",&a,&b)
#define print(a)     printf("%d\n",a)
#define vec          vector<int>
#define pb           push_back    
#define pairs        pair<int,int>
#define f            first
#define s            second
#define all(v)       v.begin(),v.end()
#define mem(a,b)     memset(a,b,sizeof(a))
#define inf          INT_MAX
const int mod=1e9+7;
const int N=5e5+5;
int t;

int n,ind;

int min(int a,int b)
{
    if(a<b)
    return a;

    return b;
}

int manacher(string s1)
{
    n=s1.size();

    int r=0,c=0,maxLen=0,palind[n+1]={};
  
    rep(i,0,n)
    {
        int mirror=2*c-i;

        if(i<r)
        palind[i]=min(mirror,palind[mirror]);

        int a=i+(palind[i]+1);
        int b=i-(palind[i]+1);

        while(a<n && b>=0 && s1[a]==s1[b])
        a++,b--,palind[i]++;

        if(i+palind[i]>r)
        {
            c=i;
            r=i+palind[i];

            if(palind[i]>maxLen)
            maxLen=palind[i],ind=i;
        }
    }

    return maxLen;
}

int main()
{
    scn(t);

    while(t--)
    {
        string s1,s2;
        cin>>s2;

        n=s2.size();
        
        rep(i,0,n)
        {
            s1.pb('#');
            s1.pb(s2[i]);
        }
        
        s1.pb('#');

        string ans;

        int maxLen=manacher(s1);
 
        for(int i=ind-maxLen; i<ind+maxLen; i++)
        if(s1[i]!='#')
        ans.pb(s1[i]);

        // cout<<maxLen<<endl;
        
        cout<<ans<<endl;
    }
}